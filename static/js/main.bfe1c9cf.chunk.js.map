{"version":3,"sources":["helpers/history.js","constants/action-types.js","actions/login.js","utils/common-func.js","constants/index.js","utils/Auth.js","components/Login/index.jsx","actions/planet.js","components/common/grid/ItemCard.jsx","components/common/grid/PlanetList.jsx","components/SearchScreen/index.jsx","reducers/root-reducer.js","reducers/login.js","reducers/planet.js","store.js","containers/app/App.js","serviceWorker.js","index.js"],"names":["history","createHashHistory","actionTypes","apiURLs","login","planet","loginUser","dispatch","type","axios","method","url","responseType","then","response","payload","data","catch","error","utility","getObjectByKeySearch","_arrayObj","keys","value","filter","item","toUpperCase","length","getArrayObjectByMultipleKeySearch","includes","CommonConstant","USERNAME","token","setToken","_data","localStorage","setItem","getToken","getItem","removeToken","removeItem","require","LoginScreen","props","handleSignIn","evt","preventDefault","setState","isAuthUser","handleOnChange","target","name","state","userName","password","push","prevProps","this","logged","errorLogin","peopleRes","loging","_userObj","btnLabel","class","onChange","autoComplete","placeholder","disabled","onClick","React","Component","connect","bindActionCreators","_","assign","actionCreators","fetchPlanets","results","useStyles","makeStyles","card","width","minWidth","backgroundColor","bullet","display","margin","transform","title","fontSize","color","pos","marginBottom","btn","padding","border","borderTopRightRadius","borderTopLeftRadius","ItemCard","classes","className","Card","CardContent","Typography","gutterBottom","CardActions","Button","size","styles","planetColumn","PlanetListComponent","planets","planetColumns","map","Col","style","xs","sm","md","lg","Row","SearchScreen","_handleChange","planetData","searchdataObj","_handleLogout","e","searchValue","planetsArray","Container","id","aria-label","PlanetList","height","to","renderGrid","CircularProgress","nextProps","prevState","newState","eq","fetchingPlanet","errorFetchingPlanet","fetchedPlanet","rootReducer","combineReducers","routing","routeReducer","paramState","configureStore","store","storeEnhancers","reduxRouterMiddleware","syncHistory","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","createStore","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bfe1c9cf.chunk.js","sourcesContent":["import { createHashHistory } from 'history';\r\n\r\nexport const history = createHashHistory();","\r\nconst apiDomain = 'https://swapi.co/api';\r\n\r\nexport const actionTypes = {\r\n  PROCESSING_LOGIN: 'PROCESSING_LOGIN',\r\n  PROCESED_LOGIN: 'PROCESED_LOGIN',\r\n  ERR_PROCESSING_LOGIN: 'ERR_PROCESSING_LOGIN',\r\n  FETCHING_PLANET: 'FETCHING_PLANET',\r\n  FETCHED_PLANET: 'FETCHED_PLANET',\r\n  ERR_FETCHING_PLANET: 'ERR_FETCHING_PLANET',\r\n\r\n};\r\n\r\nexport const apiURLs = {\r\n  login: `${apiDomain}/people`,\r\n  planet: `${apiDomain}/planets`,\r\n};\r\n","import axios from 'axios';\r\nimport { actionTypes, apiURLs } from '../constants/action-types';\r\n\r\n export const loginUser = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: actionTypes.PROCESSING_LOGIN\r\n    });\r\n    return axios({\r\n      method: 'GET',\r\n      url: apiURLs.login,\r\n      responseType: 'json'\r\n    })\r\n      .then(response => {\r\n        dispatch({\r\n          type: actionTypes.PROCESED_LOGIN,\r\n          payload: response.data\r\n        });\r\n      })\r\n      .catch(error => {\r\n        dispatch({\r\n          type: actionTypes.ERR_PROCESSING_LOGIN\r\n        });\r\n      });\r\n  };\r\n};","// import _ from 'lodash';\r\nexport const utility = {\r\n    getObjectByKeySearch,\r\n    getArrayObjectByMultipleKeySearch\r\n}\r\n\r\n function getObjectByKeySearch(_arrayObj, keys, value) {\r\n    const data = _arrayObj.filter((item) => {\r\n        return item[keys].toUpperCase()===(value.toUpperCase());\r\n    });\r\n    if (data.length > 0) {\r\n        return data;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction getArrayObjectByMultipleKeySearch(_arrayObj, keys, value) {\r\n    const data = _arrayObj.filter((item) => {\r\n        return item[keys].toUpperCase().includes(value.toUpperCase());\r\n    });\r\n    if (data.length > 0) {\r\n        return data;\r\n    } else {\r\n        return false;\r\n    }\r\n}","export const CommonConstant = {\r\n    USERNAME: 'USERNAME'\r\n}","import { CommonConstant } from '../constants';\r\n\r\nexport const token = {\r\n    setToken,\r\n    getToken,\r\n    removeToken\r\n}\r\n\r\nfunction setToken(_data) {\r\n    return localStorage.setItem(CommonConstant.USERNAME, _data);\r\n}\r\n\r\n\r\nfunction getToken() {\r\n    return localStorage.getItem(CommonConstant.USERNAME);\r\n}\r\n\r\nfunction removeToken() {\r\n    return localStorage.removeItem(CommonConstant.USERNAME);\r\n}\r\n","import React from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport * as actionCreators from '../../actions/login';\r\nimport { utility } from '../../utils/common-func'\r\nimport { token } from '../../utils/Auth';\r\nrequire('./style.scss')\r\n\r\nclass LoginScreen extends React.Component{\r\n constructor(props){\r\n   super(props);\r\n   this.state = {\r\n      userName: '',\r\n      password: '',\r\n      isAuthUser: false\r\n   }\r\n   if(token.getToken()){\r\n    this.props.history.push(\"/search\");\r\n  }\r\n }\r\n\r\n componentDidUpdate(prevProps) {\r\n  const { logged, errorLogin, peopleRes } = this.props;\r\n  if (prevProps.loging && logged && !errorLogin) {\r\n    if(peopleRes.length > 0){\r\n      const _userObj = utility.getObjectByKeySearch(peopleRes, 'name', this.state.userName);\r\n      if(_userObj){\r\n        const _fUserObj = utility.getObjectByKeySearch(_userObj, 'birth_year', this.state.password);\r\n        if(_fUserObj.length > 0){\r\n          token.setToken(this.state.userName);\r\n          this.props.history.push(\"/search\");\r\n        }else{\r\n          this.setState({ isAuthUser: true});\r\n        }\r\n      }else{\r\n        this.setState({ isAuthUser: true});\r\n      }\r\n    }else{\r\n      this.setState({ isAuthUser: true});\r\n    }\r\n  }\r\n}\r\n\r\n handleSignIn=(evt)=>{\r\n   evt.preventDefault();\r\n   this.setState({ isAuthUser: false});\r\n   this.props.loginUser();\r\n }\r\n\r\n handleOnChange=(evt)=>{\r\n   this.setState({ [evt.target.name]: evt.target.value, isAuthUser: false});\r\n }\r\n\r\n render(){\r\n   const {userName, password, isAuthUser} = this.state;\r\n   const btnLabel = this.props.loging ? 'Please Wait...' : 'Login';\r\n    return (\r\n      <div class=\"login-page\">\r\n        <div class=\"form\">\r\n          <h1>Login</h1>\r\n          <form class=\"login-form\">\r\n            <input type=\"text\" name=\"userName\" onChange={this.handleOnChange} autoComplete=\"off\" placeholder=\"Username\" />\r\n            <input type=\"password\" name=\"password\" onChange={this.handleOnChange} placeholder=\"Password\" />\r\n            <button disabled={(!userName && !password) || this.props.loging } onClick={this.handleSignIn}>{btnLabel}</button>\r\n            {\r\n              isAuthUser ? <p class=\"message\">Invalid Username or password</p> : null\r\n            }\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { login } = state;\r\n  return {\r\n    loging: login.loging,\r\n    peopleRes: login.peopleRes,\r\n    errorLogin: login.errorLogin,\r\n    logged: login.logged\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators(_.assign({}, actionCreators, {}), dispatch);\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginScreen);\r\n","import axios from 'axios';\r\nimport { actionTypes, apiURLs } from '../constants/action-types';\r\n\r\n export const fetchPlanets = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: actionTypes.FETCHING_PLANET\r\n    });\r\n    return axios({\r\n      method: 'GET',\r\n      url: apiURLs.planet,\r\n      responseType: 'json'\r\n    })\r\n      .then(response => {\r\n        dispatch({\r\n          type: actionTypes.FETCHED_PLANET,\r\n          payload: response.data.results\r\n        });\r\n      })\r\n      .catch(error => {\r\n        dispatch({\r\n          type: actionTypes.ERR_FETCHING_PLANET\r\n        });\r\n      });\r\n  };\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width:275,\r\n    minWidth: 275,\r\n    backgroundColor: '#333'\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    color: '#ffe300',\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  btn: {\r\n    padding: \"10px 15px\",\r\n    marginBottom: \"-1px\",\r\n    backgroundColor: \"#32383e\",\r\n    border: \"1px solid rgba(0,0,0,.6)\",\r\n    color: '#fff',\r\n    borderTopRightRadius: 4,\r\n    borderTopLeftRadius: 4,\r\n  }\r\n});\r\n\r\nexport default function ItemCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.planet.name}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button className={classes.btn} size=\"small\">Info</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport ItemCard from './ItemCard';\r\n\r\nconst styles = {\r\n  planetColumn: {\r\n    marginBottom: 20\r\n  }\r\n}\r\nconst PlanetListComponent = ({planets}) => {\r\n  const planetColumns = planets ? planets.map(planet => (\r\n    <Col style={styles.planetColumn}  xs={12} sm={4} md={3} lg={3}>\r\n      <ItemCard planet={planet}/>\r\n    </Col>\r\n  )) : null;\r\n  return (\r\n    <Row>\r\n      {planetColumns}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default PlanetListComponent;","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../actions/planet';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Search from '@material-ui/icons/Search';\r\nimport PlanetList from '../../components/common/grid/PlanetList'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport { utility } from '../../utils/common-func'\r\nimport { token } from '../../utils/Auth';\r\nrequire('../../common/style.scss');\r\nrequire('./style.scss');\r\nclass SearchScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchValue: '',\r\n            data:[],\r\n            planetData:[]\r\n        }\r\n        this.planetData=[];\r\n        if(!token.getToken()){\r\n            this.props.history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPlanets();\r\n    }\r\n\r\n   static getDerivedStateFromProps(nextProps, prevState){\r\n      let newState=null;\r\n      if(!_.eq(nextProps.planetData, prevState.planetData) ){\r\n        newState = { data:  nextProps.planetData, planetData: nextProps.planetData};\r\n        return newState;\r\n      }\r\n      return newState;\r\n    }\r\n\r\n    _handleChange = (evt) =>{\r\n        const { value } = evt.target;\r\n        if (_.size(this.state.planetData) > 0) {\r\n            const searchdataObj = utility.getArrayObjectByMultipleKeySearch(this.state.planetData, 'name', value);\r\n            this.setState({\r\n                data: searchdataObj\r\n            })\r\n        }\r\n    }\r\n    \r\n    _handleLogout = (e) =>{\r\n        token.removeToken();\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    renderGrid(planetsArray) {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"input-group md-form form-sm form-1 pl-0 row-margin\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text purple lighten-3\" id=\"basic-text1\"><Search /></span>\r\n                            </div>\r\n                            <input className=\"form-control my-0 py-1\" onChange={this._handleChange} type=\"text\" placeholder=\"Search by Planet name\" aria-label=\"Search\" />\r\n                        </div>\r\n                    </Row>\r\n                    <Row className=\"row-margin\">\r\n                        <PlanetList planets={planetsArray} />\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        //const { planetData } = this.props;\r\n        return (\r\n            <div style={{ backgroundColor: \"#c8c8c8\", height: '750px' }}>\r\n                <Link onClick={this._handleLogout} className=\"logout\" to=\"/\">Logout</Link>\r\n                {\r\n                    _.size(this.state.data) > 0 ?\r\n                        this.renderGrid(this.state.data)\r\n\r\n                        : <CircularProgress className=\"loader\" color=\"primary\" />\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { planet } = state;\r\n    return {\r\n        fetchingPlanet: planet.fetchingPlanet,\r\n        planetData: planet.planetData || [],\r\n        errorFetchingPlanet: planet.errorFetchingPlanet,\r\n        fetchedPlanet: planet.fetchedPlanet\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(_.assign({}, actionCreators, {}), dispatch);\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SearchScreen);\r\n","import { combineReducers } from 'redux';\r\nimport { routeReducer } from 'redux-simple-router';\r\nimport LoginReducer from './login';\r\nimport PlanetReducer from './planet';\r\n\r\nconst rootReducer = combineReducers({\r\n  routing: routeReducer,\r\n  login: LoginReducer,\r\n  planet: PlanetReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import _ from 'lodash';\r\n\r\nexport default (paramState, payload) => {\r\n  const state = paramState || {};\r\n  switch (payload.type) {\r\n    case 'PROCESSING_LOGIN':\r\n        return _.assign({}, state, {\r\n            loging: true,\r\n            peopleRes: [],\r\n            errorLogin: false,\r\n            logged: false\r\n          });\r\n    case 'PROCESED_LOGIN':\r\n        return _.assign({}, state, {\r\n            loging: false,\r\n            peopleRes: payload.payload.results,\r\n            errorLogin: false,\r\n            logged: true\r\n          });\r\n    case 'ERR_PROCESSING_LOGIN':\r\n        return _.assign({}, state, {\r\n            loging: false,\r\n            peopleRes: [],\r\n            errorLogin: true,\r\n            logged: false\r\n          });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import _ from 'lodash';\r\n\r\nexport default (paramState, payload) => {\r\n  const state = paramState || {};\r\n  switch (payload.type) {\r\n    case 'FETCHING_PLANET':\r\n        return _.assign({}, state, {\r\n            fetchingPlanet: true,\r\n            planetData: [],\r\n            errorFetchingPlanet: false,\r\n            fetchedPlanet: false\r\n          });\r\n    case 'FETCHED_PLANET':\r\n        return _.assign({}, state, {\r\n            fetchingPlanet: false,\r\n            planetData: payload.payload,\r\n            errorFetchingPlanet: false,\r\n            fetchedPlanet: true\r\n          });\r\n    case 'ERR_FETCHING_PLANET':\r\n        return _.assign({}, state, {\r\n            fetchingPlanet: false,\r\n            planetData: [],\r\n            errorFetchingPlanet: true,\r\n            fetchedPlanet: false\r\n          });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createHashHistory } from 'history';\r\nimport { syncHistory } from 'redux-simple-router';\r\nimport rootReducer from './reducers/root-reducer';\r\n\r\nexport const history = createHashHistory();\r\n\r\nfunction configureStore() {\r\n  const reduxRouterMiddleware = syncHistory(history);\r\n  let storeEnhancers;\r\n\r\n  if (window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    storeEnhancers = compose(\r\n      applyMiddleware(thunk),\r\n      applyMiddleware(reduxRouterMiddleware),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n  } else {\r\n    storeEnhancers = compose(\r\n      applyMiddleware(thunk),\r\n      applyMiddleware(reduxRouterMiddleware)\r\n    );\r\n  }\r\n\r\n  return createStore(rootReducer, {}, storeEnhancers);\r\n}\r\n\r\nexport default configureStore;\r\n","import React, { Component } from 'react';\r\nimport { history } from '../../helpers/history';\r\nimport { Provider } from 'react-redux';\r\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport LoginScreen from '../../components/Login';\r\nimport SearchScreen from '../../components/SearchScreen';\r\nimport configureStore from '../../store';\r\nconst store = configureStore();\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route exact path='/' component={LoginScreen} />\r\n          <Route exact path='/login' component={LoginScreen} />\r\n          <Route exact path='/search' component={SearchScreen} />\r\n          <Route path=\"*\" component={LoginScreen} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/app/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}